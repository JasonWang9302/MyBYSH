<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
	<!-- 使用通配符建议设置 成False -->
	<constant name="struts.enable.DynamicMethodInvocation" value="false"></constant>

	<package name="default" namespace="/" extends="struts-default">

		<!-- 定义新的拦截器栈, 配置 prepare 拦截器栈的 alwaysInvokePrepare 参数值为 false -->
		<interceptors>
			<interceptor-stack name="sshStack">
				<interceptor-ref name="paramsPrepareParamsStack">
					<param name="prepare.alwaysInvokePrepare">false</param>
				</interceptor-ref>
			</interceptor-stack>
		</interceptors>
		<!-- 使用新的拦截器栈 设置默认拦截器栈为上面定义的 -->
		<default-interceptor-ref name="sshStack"></default-interceptor-ref>

		<!-- <global-allowed-methods>regex:.*</global-allowed-methods> -->

		<!-- <action name="index"> <result>index.jsp</result> </action> <action 
			name="employee_*" class="employeeAction" method="{1}"> <result name="all">/WEB-INF/view/employeeList.jsp</result> 
			<result name="toAdd">/WEB-INF/view/employee-toAdd.jsp</result> <result name="toEdit">/WEB-INF/view/employee-toEdit.jsp</result> 
			<result type="stream" name="delete"> <param name="contentType">text/html</param> 
			<param name="inputName">inputStream</param> </result> <result type="stream" 
			name="verifyName"> <param name="contentType">text/html</param> <param name="inputName">inputStream</param> 
			</result> <result name="add" type="redirectAction">employee_all</result> 
			<allowed-methods>all,delete,toAdd,add,verifyName,toEdit,edit</allowed-methods> 
			</action> -->

		<action name="index">
			<result>/index.jsp</result>
		</action>

		<action name="user-*" class="userAction" method="{1}">
			<result name="toLogin">/login.jsp</result>
			<result name="index">/index.jsp</result>
			<result type="stream" name="verifyName">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>



		<!-- 项目 -->
		<action name="project-*" class="projectAction" method="{1}">
			<result name="publish" type="chain">project-toPublish</result>
			<result name="toPublish">/pubpro.jsp</result>
			<result name="showProjectList">/projectList.jsp</result>
			<result name="showDetail">/projectDetails.jsp</result>

			<result name="showMyPublishDSH">/personal/wdfb-dsh.jsp</result>
			<result name="toEditProject">/personal/wdfb-dsh-bj.jsp</result>
			<!-- 用户异步逻辑删 -->
			<result type="stream" name="logicDelProject">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
			<result name="updateProject" type="chain">project-showMyPublishDSH
			</result>
		</action>


		<!-- 竞标 -->
		<action name="bid-*" class="bidAction" method="{1}">
         <result name="toBid">/bidIframe.jsp</result>
         <result name="doBid">/bidIframe.jsp</result>

		</action>

	</package>


	<package name="resultJson" namespace="/" extends="json-default">
		<!-- 定义新的拦截器栈, 配置 prepare 拦截器栈的 alwaysInvokePrepare 参数值为 false -->
		<interceptors>
			<interceptor-stack name="sshStack">
				<interceptor-ref name="paramsPrepareParamsStack">
					<param name="prepare.alwaysInvokePrepare">false</param>
				</interceptor-ref>
			</interceptor-stack>
		</interceptors>
		<!-- 使用新的拦截器栈 设置默认拦截器栈为上面定义的 -->
		<default-interceptor-ref name="sshStack"></default-interceptor-ref>
		<!-- 上传文件 -->
		<action name="uploadAction-*" class="FileUploadAction" method="{1}">
			<result name="upload" type="json">
				<param name="root">fileResponse</param>
			</result>
			<result name="showDSH" type="json">
				<param name="root">projectDataResponse</param>
			</result>
			<result type="stream" name="downloadFile">
				<param name="bufferSize">2048</param>
			</result>
			<allowed-methods>upload,downloadFile,showDSH</allowed-methods>
		</action>
		
		
         <!--           配合layui  个人中心需要返回json的 -->
		<action name="wdfb-*" class="projectAction" method="{1}">
		
		<result name="showDSH" type="json">
				<param name="root">projectDataResponse</param>
			</result>
		
		<result name="showZBZ" type="json">
				<param name="root">projectDataResponse</param>
			</result>
		<allowed-methods>showDSH,showZBZ</allowed-methods>
		</action>
		
		
	</package>



</struts>


